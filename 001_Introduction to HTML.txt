# Introduction to HTML

* What is HTML stands for?
    HTML stands for 'Hyper Text Markup Language'. It is used to create web-pages and describes 
    their structure.

* What is meant by Web-Development?
    Speaking widely, it consists of three parts/ things:
a.  HTML gives us the structure of a web-site.
b.  CSS tells us about the layout of a web-site, i.e. its appearance.
c.  JavaScript, i.e. a programming language, provides soul (dynamic features) to a web-site and
    also defines its behaviour.

* What is difference between an App and a Web-site?
1.  If we view a web-page on 'Mobile', like WhatsApp, is called an App.
2.  If we view a web-page on 'Computer' or 'Laptop' is called a web-site.

* How to get started?
    This topic involves two aspects;
i.  where to write html's code, and 
ii. where to view the result of that coding. 
    The code is usually written in a text editor, like Notepad, NotePad+, Visual Studio Code etc.    
    The result of this code may be seen at a browser, like Google Chrome etc.

* Steps to start working.
    Install VSC on your computer. 
    Create a folder so to arrange your work at the same place.
    Create a file in that folder, the extension of file will be ".html", like file_name.html.

* WHat is a TAG?
    All the commands/ codes are written between angle brackets "<" & ">". In technical language, 
    we refer the code, written between angle brackets as tag.
    Usually, we have a pair of tags, i.e. '< >' opening tag and '</ >' closing tag. 
    Every code has a specific name which corresponds to its working or functionality, e.g. 
    '<p>' is a paragraph tag. 

* What is an ELEMENT?
    All the content (text to be displayed on a browser), opening and closing tags containing
    certain code, as a whole, are called element.  
    Content is always written between opening & closing tags and Code is always written between
    angle brackets.
    HTML consists of many tags that tell the browser how to display the content.
    If an element has no content, it is called empty or void or inline element and requires no
    closing tag, like '<br>' a line break tag is an empty element.

* What is an ATTRIBUTE?
    Attribute is merely some additional information relating to an element necessitated to 
    perform a task in a better way. These always be provided in an opening tag. They have two 
    parts, i.e. their name and their value.

* What is a COMMENTS?
    Comments are the notes for the other programmers and describe the purpose of a program. 
    The comments are non-printable. The following is the example of a comments;
    <!-- 'text to be written' -->

* Tip: How to work fast?
    Use 'emmet abbreviations' in VSC to work fast. The use of which we will learn as we proceed 
    with this course.  However, some of its usages may be seen under README file. For further 
    details, please consult 'emmet cheat sheet' on www.google.com.

HTML Tags Ordered Alphabetically

<a>	Defines a hyperlink
<address>	Defines contact information for the author/owner of a document
<applet>	Not supported in HTML5. Use <embed> or <object> instead. Defines an embedded applet
<area>	Defines an area inside an image map
<article>	Defines an article
<aside>	Defines content aside from the page content
<audio>	Defines embedded sound content
<base>	Specifies the base URL/target for all relative URLs in a document
<basefont>	Not supported in HTML5. Use CSS instead. Specifies a default color, size, and font for all text in a document
<bdi>	Isolates a part of text that might be formatted in a different direction from other text outside it
<bdo>	Overrides the current text direction
<button>	Defines a clickable button
<canvas>	Used to draw graphics, on the fly, via scripting (usually JavaScript)
<caption>	Defines a table caption
<code>	Defines a piece of computer code
<col>	Specifies column properties for each column within a <colgroup> element 
<colgroup>	Specifies a group of one or more columns in a table for formatting
<data>	Adds a machine-readable translation of a given content
<datalist>	Specifies a list of pre-defined options for input controls
<dd>	Defines a description/value of a term in a description list
<details>	Defines additional details that the user can view or hide
<dialog>	Defines a dialog box or window
<dir>	Not supported in HTML5. Use <ul> instead. Defines a directory list
<div>	Defines a section in a document
<dl>	Defines a description list
<dt>	Defines a term/name in a description list
<embed>	Defines a container for an external application
<fieldset>	Groups related elements in a form
<figcaption>	Defines a caption for a <figure> element
<figure>	Specifies self-contained content
<footer>	Defines a footer for a document or section
<form>	Defines an HTML form for user input
<frame>	Not supported in HTML5. Defines a window (a frame) in a frameset
<frameset>	Not supported in HTML5. Defines a set of frames
<header>	Defines a header for a document or section
<iframe>	Defines an inline frame
<img>	Defines an image
<input>	Defines an input control
<kbd>	Defines keyboard input
<label>	Defines a label for an <input> element
<legend>	Defines a caption for a <fieldset> element
<li>	Defines a list item
<link>	Defines the relationship between a document and an external resource (most used to link to style sheets)
<main>	Specifies the main content of a document
<map>	Defines an image map
<meter>	Defines a scalar measurement within a known range (a gauge)
<nav>	Defines navigation links
<noframes>	Not supported in HTML5. Defines an alternate content for users that do not support frames
<noscript>	Defines an alternate content for users that do not support client-side scripts
<object>	Defines a container for an external application
<ol>	Defines an ordered list
<optgroup>	Defines a group of related options in a drop-down list
<option>	Defines an option in a drop-down list
<output>	Defines the result of a calculation
<param>	Defines a parameter for an object
<picture>	Defines a container for multiple image resources
<pre>	Defines preformatted text
<progress>	Represents the progress of a task
<samp>	Defines sample output from a computer program
<script>	Defines a client-side script
<section>	Defines a section in a document
<select>	Defines a drop-down list
<source>	Defines multiple media resources for media elements (<video> and <audio>)
<span>	Defines a section in a document
<summary>	Defines a visible heading for a <details> element
<svg>	Defines a container for SVG graphics
<table>	Defines a table
<tbody>	Groups the body content in a table
<td>	Defines a cell in a table
<template>	Defines a container for content that should be hidden when the page loads
<textarea>	Defines a multiline input control (text area)
<tfoot>	Groups the footer content in a table
<th>	Defines a header cell in a table
<thead>	Groups the header content in a table
<time>	Defines a specific time (or datetime)
<tr>	Defines a row in a table
<track>	Defines text tracks for media elements (<video> and <audio>)
<tt>	Not supported in HTML5. Use CSS instead. Defines teletype text
<ul>	Defines an unordered list
<var>	Defines a variable
<video>	Defines embedded video content
<wbr>	Defines a possible line-break

HTML Tags
<a>
<address>
<applet>
<area>
<article>
<aside>
<audio>
<base>
<basefont>
<bdi>
<bdo>
<button>
<canvas>
<caption>
<code>
<col>
<colgroup>
<data>
<datalist>
<dd>
<details>
<dialog>
<dir>
<div>
<dl>
<dt>
<embed>
<fieldset>
<figcaption>
<figure>
<footer>
<form>
<frame>
<frameset>
<header>
<iframe>
<img>
<input>
<kbd>
<label>
<legend>
<li>
<link>
<main>
<map>
<meter>
<nav>
<noframes>
<noscript>
<object>
<ol>
<optgroup>
<option>
<output>
<param>
<picture>
<pre>
<progress>
<samp>
<script>
<section>
<select>
<source>
<span>
<summary>
<svg>
<table>
<tbody>
<td>
<template>
<textarea>
<tfoot>
<th>
<thead>
<time>
<tr>
<track>
<tt>
<ul>
<var>
<video>
<wbr>

HTML Element Reference - By Category

Basic HTML
Tag	            Description
<!DOCTYPE> 	    Defines the document type
<html>	        Defines an HTML document
<head>	        Contains metadata/information for the document
<title>	        Defines a title for the document
<body>	        Defines the document's body
<h1> to <h6>	Defines HTML headings
<p>	            Defines a paragraph
<br>	        Inserts a single line break
<hr>	        Defines a thematic change in the content
<!--...-->	    Defines a comment

Formatting
Tag	            Description
<acronym>	    Not supported in HTML5. Use <abbr> instead. Defines an acronym
<abbr>	        Defines an abbreviation or an acronym
<address>	    Defines contact information for the author/owner of a document/article
<b>	            Defines bold text
<bdi>	        Isolates a part of text that might be formatted in a different direction from other text outside it
<bdo>	        Overrides the current text direction
<big>	        Not supported in HTML5. Use CSS instead. Defines big text
<blockquote>	Defines a section that is quoted from another source
<center>	    Not supported in HTML5. Use CSS instead. Defines centered text
<cite>	        Defines the title of a work
<code>	        Defines a piece of computer code
<del>	        Defines text that has been deleted from a document
<dfn>	        Specifies a term that is going to be defined within the content
<em>	        Defines emphasized text 
<font>	        Not supported in HTML5. Use CSS instead. Defines font, color, and size for text
<i>	            Defines a part of text in an alternate voice or mood
<ins>	        Defines a text that has been inserted into a document
<kbd>	        Defines keyboard input
<mark>	        Defines marked/highlighted text
<meter>	        Defines a scalar measurement within a known range (a gauge)
<pre>	        Defines preformatted text
<progress>	    Represents the progress of a task
<q>	            Defines a short quotation
<rp>	        Defines what to show in browsers that do not support ruby annotations
<rt>	        Defines an explanation/pronunciation of characters (for East Asian typography)
<ruby>	        Defines a ruby annotation (for East Asian typography)
<s>	            Defines text that is no longer correct
<samp>	        Defines sample output from a computer program
<small>	        Defines smaller text
<strike>	    Not supported in HTML5. Use <del> or <s> instead.   Defines strike-through text
<strong>	    Defines important text
<sub>	        Defines subscripted text
<sup>	        Defines superscripted text
<template>	    Defines a container for content that should be hidden when the page loads
<time>	        Defines a specific time (or date-time)
<tt>	        Not supported in HTML5. Use CSS instead. Defines teletype text
<u>	            Defines some text that is unarticulated and styled differently from normal text
<var>	        Defines a variable
<wbr>	        Defines a possible line-break
Forms and Input
Tag	Description
<form>	Defines an HTML form for user input
<input>	Defines an input control
<textarea>	Defines a multiline input control (text area)
<button>	Defines a clickable button
<select>	Defines a drop-down list
<optgroup>	Defines a group of related options in a drop-down list
<option>	Defines an option in a drop-down list
<label>	Defines a label for an <input> element
<fieldset>	Groups related elements in a form
<legend>	Defines a caption for a <fieldset> element
<datalist>	Specifies a list of pre-defined options for input controls
<output>	Defines the result of a calculation
Frames
Tag	Description
<frame>	Not supported in HTML5.
Defines a window (a frame) in a frameset
<frameset>	Not supported in HTML5.
Defines a set of frames
<noframes>	Not supported in HTML5.
Defines an alternate content for users that do not support frames
<iframe>	Defines an inline frame
Images
Tag	Description
<img>	Defines an image
<map>	Defines a client-side image map
<area>	Defines an area inside an image map
<canvas>	Used to draw graphics, on the fly, via scripting (usually JavaScript)
<figcaption>	Defines a caption for a <figure> element
<figure>	Specifies self-contained content
<picture>	Defines a container for multiple image resources
<svg>	Defines a container for SVG graphics
Audio / Video
Tag	Description
<audio>	Defines sound content
<source>	Defines multiple media resources for media elements (<video>, <audio> and <picture>)
<track>	Defines text tracks for media elements (<video> and <audio>)
<video>	Defines a video or movie
Links
Tag	Description
<a>	Defines a hyperlink
<link>	Defines the relationship between a document and an external resource (most used to link to style sheets)
<nav>	Defines navigation links
Lists
Tag	Description
<ul>	Defines an unordered list
<ol>	Defines an ordered list
<li>	Defines a list item
<dir>	Not supported in HTML5. Use <ul> instead.
Defines a directory list
<dl>	Defines a description list
<dt>	Defines a term/name in a description list
<dd>	Defines a description of a term/name in a description list
Tables
Tag	Description
<table>	Defines a table
<caption>	Defines a table caption
<th>	Defines a header cell in a table
<tr>	Defines a row in a table
<td>	Defines a cell in a table
<thead>	Groups the header content in a table
<tbody>	Groups the body content in a table
<tfoot>	Groups the footer content in a table
<col>	Specifies column properties for each column within a <colgroup> element
<colgroup>	Specifies a group of one or more columns in a table for formatting
Styles and Semantics
Tag	Description
<style>	Defines style information for a document
<div>	Defines a section in a document
<span>	Defines a section in a document
<header>	Defines a header for a document or section
<footer>	Defines a footer for a document or section
<main>	Specifies the main content of a document
<section>	Defines a section in a document
<article>	Defines an article
<aside>	Defines content aside from the page content
<details>	Defines additional details that the user can view or hide
<dialog>	Defines a dialog box or window
<summary>	Defines a visible heading for a <details> element
<data>	Adds a machine-readable translation of a given content
Meta Info
Tag	Description
<head>	Defines information about the document
<meta>	Defines metadata about an HTML document
<base>	Specifies the base URL/target for all relative URLs in a document
<basefont>	Not supported in HTML5. Use CSS instead.
Specifies a default color, size, and font for all text in a document
Programming
Tag	Description
<script>	Defines a client-side script
<noscript>	Defines an alternate content for users that do not support client-side scripts
<applet>	Not supported in HTML5. Use <embed> or <object> instead.
Defines an embedded applet
<embed>	Defines a container for an external (non-HTML) application
<object>	Defines an embedded object
<param>	Defines a parameter for an object

HTML Attribute Reference
The table below lists all HTML attributes and what elements they can be used within:

Attribute	Belongs to	Description
accept	<input>	Specifies the types of files that the server accepts (only for type="file")
accept-charset	<form>	Specifies the character encodings that are to be used for the form submission
accesskey	Global Attributes	Specifies a shortcut key to activate/focus an element
action	<form>	Specifies where to send the form-data when a form is submitted
align	Not supported in HTML 5.	Specifies the alignment according to surrounding elements. Use CSS instead
alt	<area>, <img>, <input>	Specifies an alternate text when the original element fails to display
async	<script>	Specifies that the script is executed asynchronously (only for external scripts)
autocomplete	<form>, <input>	Specifies whether the <form> or the <input> element should have autocomplete enabled
autofocus	<button>, <input>, <select>, <textarea>	Specifies that the element should automatically get focus when the page loads
autoplay	<audio>, <video>	Specifies that the audio/video will start playing as soon as it is ready
bgcolor	Not supported in HTML 5.	Specifies the background color of an element. Use CSS instead
border	Not supported in HTML 5.	Specifies the width of the border of an element. Use CSS instead
charset	<meta>, <script>	Specifies the character encoding
checked	<input>	Specifies that an <input> element should be pre-selected when the page loads (for type="checkbox" or type="radio")
cite	<blockquote>, <del>, <ins>, <q>	Specifies a URL which explains the quote/deleted/inserted text
class	Global Attributes	Specifies one or more classnames for an element (refers to a class in a style sheet)
color	Not supported in HTML 5.	Specifies the text color of an element. Use CSS instead
cols	<textarea>	Specifies the visible width of a text area
colspan	<td>, <th>	Specifies the number of columns a table cell should span
content	<meta>	Gives the value associated with the http-equiv or name attribute
contenteditable	Global Attributes	Specifies whether the content of an element is editable or not
controls	<audio>, <video>	Specifies that audio/video controls should be displayed (such as a play/pause button etc)
coords	<area>	Specifies the coordinates of the area
data	<object>	Specifies the URL of the resource to be used by the object
data-*	Global Attributes	Used to store custom data private to the page or application
datetime	<del>, <ins>, <time>	Specifies the date and time
default	<track>	Specifies that the track is to be enabled if the user's preferences do not indicate that another track would be more appropriate
defer	<script>	Specifies that the script is executed when the page has finished parsing (only for external scripts)
dir	Global Attributes	Specifies the text direction for the content in an element
dirname	<input>, <textarea>	Specifies that the text direction will be submitted
disabled	<button>, <fieldset>, <input>, <optgroup>, <option>, <select>, <textarea>	Specifies that the specified element/group of elements should be disabled
download	<a>, <area>	Specifies that the target will be downloaded when a user clicks on the hyperlink
draggable	Global Attributes	Specifies whether an element is draggable or not
enctype	<form>	Specifies how the form-data should be encoded when submitting it to the server (only for method="post")
for	<label>, <output>	Specifies which form element(s) a label/calculation is bound to
form	<button>, <fieldset>, <input>, <label>, <meter>, <object>, <output>, <select>, <textarea>	Specifies the name of the form the element belongs to
formaction	<button>, <input>	Specifies where to send the form-data when a form is submitted. Only for type="submit"
headers	<td>, <th>	Specifies one or more headers cells a cell is related to
height	<canvas>, <embed>, <iframe>, <img>, <input>, <object>, <video>	Specifies the height of the element
hidden	Global Attributes	Specifies that an element is not yet, or is no longer, relevant
high	<meter>	Specifies the range that is considered to be a high value
href	<a>, <area>, <base>, <link>	Specifies the URL of the page the link goes to
hreflang	<a>, <area>, <link>	Specifies the language of the linked document
http-equiv	<meta>	Provides an HTTP header for the information/value of the content attribute
id	Global Attributes	Specifies a unique id for an element
ismap	<img>	Specifies an image as a server-side image map
kind	<track>	Specifies the kind of text track
label	<track>, <option>, <optgroup>	Specifies the title of the text track
lang	Global Attributes	Specifies the language of the element's content
list	<input>	Refers to a <datalist> element that contains pre-defined options for an <input> element
loop	<audio>, <video>	Specifies that the audio/video will start over again, every time it is finished
low	<meter>	Specifies the range that is considered to be a low value
max	<input>, <meter>, <progress>	Specifies the maximum value
maxlength	<input>, <textarea>	Specifies the maximum number of characters allowed in an element
media	<a>, <area>, <link>, <source>, <style>	Specifies what media/device the linked document is optimized for
method	<form>	Specifies the HTTP method to use when sending form-data
min	<input>, <meter>	Specifies a minimum value
multiple	<input>, <select>	Specifies that a user can enter more than one value
muted	<video>, <audio>	Specifies that the audio output of the video should be muted
name	<button>, <fieldset>, <form>, <iframe>, <input>, <map>, <meta>, <object>, <output>, <param>, <select>, <textarea>	Specifies the name of the element
novalidate	<form>	Specifies that the form should not be validated when submitted
onabort	<audio>, <embed>, <img>, <object>, <video>	Script to be run on abort
onafterprint	<body>	Script to be run after the document is printed
onbeforeprint	<body>	Script to be run before the document is printed
onbeforeunload	<body>	Script to be run when the document is about to be unloaded
onblur	All visible elements.	Script to be run when the element loses focus
oncanplay	<audio>, <embed>, <object>, <video>	Script to be run when a file is ready to start playing (when it has buffered enough to begin)
oncanplaythrough	<audio>, <video>	Script to be run when a file can be played all the way to the end without pausing for buffering
onchange	All visible elements.	Script to be run when the value of the element is changed
onclick	All visible elements.	Script to be run when the element is being clicked
oncontextmenu	All visible elements.	Script to be run when a context menu is triggered
oncopy	All visible elements.	Script to be run when the content of the element is being copied
oncuechange	<track>	Script to be run when the cue changes in a <track> element
oncut	All visible elements.	Script to be run when the content of the element is being cut
ondblclick	All visible elements.	Script to be run when the element is being double-clicked
ondrag	All visible elements.	Script to be run when the element is being dragged
ondragend	All visible elements.	Script to be run at the end of a drag operation
ondragenter	All visible elements.	Script to be run when an element has been dragged to a valid drop target
ondragleave	All visible elements.	Script to be run when an element leaves a valid drop target
ondragover	All visible elements.	Script to be run when an element is being dragged over a valid drop target
ondragstart	All visible elements.	Script to be run at the start of a drag operation
ondrop	All visible elements.	Script to be run when dragged element is being dropped
ondurationchange	<audio>, <video>	Script to be run when the length of the media changes
onemptied	<audio>, <video>	Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
onended	<audio>, <video>	Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
onerror	<audio>, <body>, <embed>, <img>, <object>, <script>, <style>, <video>	Script to be run when an error occurs
onfocus	All visible elements.	Script to be run when the element gets focus
onhashchange	<body>	Script to be run when there has been changes to the anchor part of the a URL
oninput	All visible elements.	Script to be run when the element gets user input
oninvalid	All visible elements.	Script to be run when the element is invalid
onkeydown	All visible elements.	Script to be run when a user is pressing a key
onkeypress	All visible elements.	Script to be run when a user presses a key
onkeyup	All visible elements.	Script to be run when a user releases a key
onload	<body>, <iframe>, <img>, <input>, <link>, <script>, <style>	Script to be run when the element is finished loading
onloadeddata	<audio>, <video>	Script to be run when media data is loaded
onloadedmetadata	<audio>, <video>	Script to be run when meta data (like dimensions and duration) are loaded
onloadstart	<audio>, <video>	Script to be run just as the file begins to load before anything is actually loaded
onmousedown	All visible elements.	Script to be run when a mouse button is pressed down on an element
onmousemove	All visible elements.	Script to be run as long as the  mouse pointer is moving over an element
onmouseout	All visible elements.	Script to be run when a mouse pointer moves out of an element
onmouseover	All visible elements.	Script to be run when a mouse pointer moves over an element
onmouseup	All visible elements.	Script to be run when a mouse button is released over an element
onmousewheel	All visible elements.	Script to be run when a mouse wheel is being scrolled over an element
onoffline	<body>	Script to be run when the browser starts to work offline
ononline	<body>	Script to be run when the browser starts to work online
onpagehide	<body>	Script to be run when a user navigates away from a page
onpageshow	<body>	Script to be run when a user navigates to a page
onpaste	All visible elements.	Script to be run when the user pastes some content in an element
onpause	<audio>, <video>	Script to be run when the media is paused either by the user or programmatically
onplay	<audio>, <video>	Script to be run when the media has started playing
onplaying	<audio>, <video>	Script to be run when the media has started playing
onpopstate	<body>	Script to be run when the window's history changes.
onprogress	<audio>, <video>	Script to be run when the browser is in the process of getting the media data
onratechange	<audio>, <video>	Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode).
onreset	<form>	Script to be run when a reset button in a form is clicked.
onresize	<body>	Script to be run when the browser window is being resized.
onscroll	All visible elements.	Script to be run when an element's scrollbar is being scrolled
onsearch	<input>	Script to be run when the user writes something in a search field (for <input type="search">)
onseeked	<audio>, <video>	Script to be run when the seeking attribute is set to false indicating that seeking has ended
onseeking	<audio>, <video>	Script to be run when the seeking attribute is set to true indicating that seeking is active
onselect	All visible elements.	Script to be run when the element gets selected
onstalled	<audio>, <video>	Script to be run when the browser is unable to fetch the media data for whatever reason
onstorage	<body>	Script to be run when a Web Storage area is updated
onsubmit	<form>	Script to be run when a form is submitted
onsuspend	<audio>, <video>	Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
ontimeupdate	<audio>, <video>	Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
ontoggle	<details>	Script to be run when the user opens or closes the <details> element
onunload	<body>	Script to be run when a page has unloaded (or the browser window has been closed)
onvolumechange	<audio>, <video>	Script to be run each time the volume of a video/audio has been changed
onwaiting	<audio>, <video>	Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
onwheel	All visible elements.	Script to be run when the mouse wheel rolls up or down over an element
open	<details>	Specifies that the details should be visible (open) to the user
optimum	<meter>	Specifies what value is the optimal value for the gauge
pattern	<input>	Specifies a regular expression that an <input> element's value is checked against
placeholder	<input>, <textarea>	Specifies a short hint that describes the expected value of the element
poster	<video>	Specifies an image to be shown while the video is downloading, or until the user hits the play button
preload	<audio>, <video>	Specifies if and how the author thinks the audio/video should be loaded when the page loads
readonly	<input>, <textarea>	Specifies that the element is read-only
rel	<a>, <area>, <form>, <link>	Specifies the relationship between the current document and the linked document
required	<input>, <select>, <textarea>	Specifies that the element must be filled out before submitting the form
reversed	<ol>	Specifies that the list order should be descending (9,8,7...)
rows	<textarea>	Specifies the visible number of lines in a text area
rowspan	<td>, <th>	Specifies the number of rows a table cell should span
sandbox	<iframe>	Enables an extra set of restrictions for the content in an <iframe>
scope	<th>	Specifies whether a header cell is a header for a column, row, or group of columns or rows
selected	<option>	Specifies that an option should be pre-selected when the page loads
shape	<area>	Specifies the shape of the area
size	<input>, <select>	Specifies the width, in characters (for <input>) or specifies the number of visible options (for <select>)
sizes	<img>, <link>, <source>	Specifies the size of the linked resource
span	<col>, <colgroup>	Specifies the number of columns to span
spellcheck	Global Attributes	Specifies whether the element is to have its spelling and grammar checked or not
src	<audio>, <embed>, <iframe>, <img>, <input>, <script>, <source>, <track>, <video>	Specifies the URL of the media file
srcdoc	<iframe>	Specifies the HTML content of the page to show in the <iframe>
srclang	<track>	Specifies the language of the track text data (required if kind="subtitles")
srcset	<img>, <source>	Specifies the URL of the image to use in different situations
start	<ol>	Specifies the start value of an ordered list
step	<input>	Specifies the legal number intervals for an input field
style	Global Attributes	Specifies an inline CSS style for an element
tabindex	Global Attributes	Specifies the tabbing order of an element
target	<a>, <area>, <base>, <form>	Specifies the target for where to open the linked document or where to submit the form
title	Global Attributes	Specifies extra information about an element
translate	Global Attributes	Specifies whether the content of an element should be translated or not
type	<a>, <button>, <embed>, <input>, <link>, <menu>, <object>, <script>, <source>, <style>	Specifies the type of element
usemap	<img>, <object>	Specifies an image as a client-side image map
value	<button>, <input>, <li>, <option>, <meter>, <progress>, <param>	Specifies the value of the element
width	<canvas>, <embed>, <iframe>, <img>, <input>, <object>, <video>	Specifies the width of the element
wrap	<textarea>	Specifies how the text in a text area is to be wrapped when submitted in a form

    HTML Global Attributes
The global attributes are attributes that can be used with all HTML elements.

Attribute	Description
accesskey	Specifies a shortcut key to activate/focus an element
class	Specifies one or more classnames for an element (refers to a class in a style sheet)
contenteditable	Specifies whether the content of an element is editable or not
data-*	Used to store custom data private to the page or application
dir	Specifies the text direction for the content in an element
draggable	Specifies whether an element is draggable or not
hidden	Specifies that an element is not yet, or is no longer, relevant
id	Specifies a unique id for an element
lang	Specifies the language of the element's content
spellcheck	Specifies whether the element is to have its spelling and grammar checked or not
style	Specifies an inline CSS style for an element
tabindex	Specifies the tabbing order of an element
title	Specifies extra information about an element
translate	Specifies whether the content of an element should be translated or not

HTML Event Attributes
Global Event Attributes
HTML has the ability to let events trigger actions in a browser, like starting a JavaScript when a user clicks on an element.

To learn more about programming events, please visit our JavaScript tutorial.

Below are the global event attributes that can be added to HTML elements to define event actions.

Window Event Attributes
Events triggered for the window object (applies to the <body> tag):

Attribute	Value	Description
onafterprint	script	Script to be run after the document is printed
onbeforeprint	script	Script to be run before the document is printed
onbeforeunload	script	Script to be run when the document is about to be unloaded
onerror	script	Script to be run when an error occurs
onhashchange	script	Script to be run when there has been changes to the anchor part of the a URL
onload	script	Fires after the page is finished loading
onmessage	script	Script to be run when the message is triggered
onoffline	script	Script to be run when the browser starts to work offline
ononline	script	Script to be run when the browser starts to work online
onpagehide	script	Script to be run when a user navigates away from a page
onpageshow	script	Script to be run when a user navigates to a page
onpopstate	script	Script to be run when the window's history changes
onresize	script	Fires when the browser window is resized
onstorage	script	Script to be run when a Web Storage area is updated
onunload	script	Fires once a page has unloaded (or the browser window has been closed)
ADVERTISEMENT
Form Events
Events triggered by actions inside a HTML form (applies to almost all HTML elements, but is most used in form elements):

Attribute	Value	Description
onblur	script	Fires the moment that the element loses focus
onchange	script	Fires the moment when the value of the element is changed
oncontextmenu	script	Script to be run when a context menu is triggered
onfocus	script	Fires the moment when the element gets focus
oninput	script	Script to be run when an element gets user input
oninvalid	script	Script to be run when an element is invalid
onreset	script	Fires when the Reset button in a form is clicked
onsearch	script	Fires when the user writes something in a search field (for <input="search">)
onselect	script	Fires after some text has been selected in an element
onsubmit	script	Fires when a form is submitted
Keyboard Events
Attribute	Value	Description
onkeydown	script	Fires when a user is pressing a key
onkeypress	script	Fires when a user presses a key
onkeyup	script	Fires when a user releases a key
Mouse Events
Attribute	Value	Description
onclick	script	Fires on a mouse click on the element
ondblclick	script	Fires on a mouse double-click on the element
onmousedown	script	Fires when a mouse button is pressed down on an element
onmousemove	script	Fires when the mouse pointer is moving while it is over an element
onmouseout	script	Fires when the mouse pointer moves out of an element
onmouseover	script	Fires when the mouse pointer moves over an element
onmouseup	script	Fires when a mouse button is released over an element
onmousewheel	script	Deprecated. Use the onwheel attribute instead
onwheel	script	Fires when the mouse wheel rolls up or down over an element
Drag Events
Attribute	Value	Description
ondrag	script	Script to be run when an element is dragged
ondragend	script	Script to be run at the end of a drag operation
ondragenter	script	Script to be run when an element has been dragged to a valid drop target
ondragleave	script	Script to be run when an element leaves a valid drop target
ondragover	script	Script to be run when an element is being dragged over a valid drop target
ondragstart	script	Script to be run at the start of a drag operation
ondrop	script	Script to be run when dragged element is being dropped
onscroll	script	Script to be run when an element's scrollbar is being scrolled
Clipboard Events
Attribute	Value	Description
oncopy	script	Fires when the user copies the content of an element
oncut	script	Fires when the user cuts the content of an element
onpaste	script	Fires when the user pastes some content in an element
Media Events
Events triggered by medias like videos, images and audio (applies to all HTML elements, but is most common in media elements, like <audio>, <embed>, <img>, <object>, and <video>).

Tip: Look at our HTML Audio and Video DOM Reference for more information.

Attribute	Value	Description
onabort	script	Script to be run on abort
oncanplay	script	Script to be run when a file is ready to start playing (when it has buffered enough to begin)
oncanplaythrough	script	Script to be run when a file can be played all the way to the end without pausing for buffering
oncuechange	script	Script to be run when the cue changes in a <track> element
ondurationchange	script	Script to be run when the length of the media changes
onemptied	script	Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
onended	script	Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
onerror	script	Script to be run when an error occurs when the file is being loaded
onloadeddata	script	Script to be run when media data is loaded
onloadedmetadata	script	Script to be run when meta data (like dimensions and duration) are loaded
onloadstart	script	Script to be run just as the file begins to load before anything is actually loaded
onpause	script	Script to be run when the media is paused either by the user or programmatically
onplay	script	Script to be run when the media is ready to start playing
onplaying	script	Script to be run when the media actually has started playing
onprogress	script	Script to be run when the browser is in the process of getting the media data
onratechange	script	Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
onseeked	script	Script to be run when the seeking attribute is set to false indicating that seeking has ended
onseeking	script	Script to be run when the seeking attribute is set to true indicating that seeking is active
onstalled	script	Script to be run when the browser is unable to fetch the media data for whatever reason
onsuspend	script	Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
ontimeupdate	script	Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
onvolumechange	script	Script to be run each time the volume is changed which (includes setting the volume to "mute")
onwaiting	script	Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
Misc Events
Attribute	Value	Description
ontoggle	script	Fires when the user opens or closes the <details> element

    HTML Audio and Video DOM Reference
The HTML5 DOM has methods, properties, and events for the <audio> and <video> elements.

HTML Audio/Video Methods
Method	Description
addTextTrack()	Adds a new text track to the audio/video
canPlayType()	Checks if the browser can play the specified audio/video type
load()	Re-loads the audio/video element
play()	Starts playing the audio/video
pause()	Pauses the currently playing audio/video
HTML Audio/Video Properties
Property	Description
audioTracks	Returns an AudioTrackList object representing available audio tracks
autoplay	Sets or returns whether the audio/video should start playing as soon as it is loaded
buffered	Returns a TimeRanges object representing the buffered parts of the audio/video
controller	Returns the MediaController object representing the current media controller of the audio/video
controls	Sets or returns whether the audio/video should display controls (like play/pause etc.)
crossOrigin	Sets or returns the CORS settings of the audio/video
currentSrc	Returns the URL of the current audio/video
currentTime	Sets or returns the current playback position in the audio/video (in seconds)
defaultMuted	Sets or returns whether the audio/video should be muted by default
defaultPlaybackRate	Sets or returns the default speed of the audio/video playback
duration	Returns the length of the current audio/video (in seconds)
ended	Returns whether the playback of the audio/video has ended or not
error	Returns a MediaError object representing the error state of the audio/video
loop	Sets or returns whether the audio/video should start over again when finished
mediaGroup	Sets or returns the group the audio/video belongs to (used to link multiple audio/video elements)
muted	Sets or returns whether the audio/video is muted or not
networkState	Returns the current network state of the audio/video
paused	Returns whether the audio/video is paused or not
playbackRate	Sets or returns the speed of the audio/video playback
played	Returns a TimeRanges object representing the played parts of the audio/video
preload	Sets or returns whether the audio/video should be loaded when the page loads
readyState	Returns the current ready state of the audio/video
seekable	Returns a TimeRanges object representing the seekable parts of the audio/video
seeking	Returns whether the user is currently seeking in the audio/video
src	Sets or returns the current source of the audio/video element
startDate	Returns a Date object representing the current time offset
textTracks	Returns a TextTrackList object representing the available text tracks
videoTracks	Deprecated. Do not use it.
volume	Sets or returns the volume of the audio/video
ADVERTISEMENT
HTML Audio/Video Events
Event	Description
abort	Fires when the loading of an audio/video is aborted
canplay	Fires when the browser can start playing the audio/video
canplaythrough	Fires when the browser can play through the audio/video without stopping for buffering
durationchange	Fires when the duration of the audio/video is changed
emptied	Fires when the current playlist is empty
ended	Fires when the current playlist is ended
error	Fires when an error occurred during the loading of an audio/video
loadeddata	Fires when the browser has loaded the current frame of the audio/video
loadedmetadata	Fires when the browser has loaded meta data for the audio/video
loadstart	Fires when the browser starts looking for the audio/video
pause	Fires when the audio/video has been paused
play	Fires when the audio/video has been started or is no longer paused
playing	Fires when the audio/video is playing after having been paused or stopped for buffering
progress	Fires when the browser is downloading the audio/video
ratechange	Fires when the playing speed of the audio/video is changed
seeked	Fires when the user is finished moving/skipping to a new position in the audio/video
seeking	Fires when the user starts moving/skipping to a new position in the audio/video
stalled	Fires when the browser is trying to get media data, but data is not available
suspend	Fires when the browser is intentionally not getting media data
timeupdate	Fires when the current playback position has changed
volumechange	Fires when the volume has been changed
waiting	Fires when the video stops because it needs to buffer the next frame

Valid HTML Elements in Different DOCTYPES
Tag	HTML 5	HTML 4	XHTML
<a>	Yes	Yes	Yes
<abbr>	Yes	Yes	Yes
<acronym>	No	Yes	Yes
<address>	Yes	Yes	Yes
<applet>	No	Yes	No
<area>	Yes	Yes	No
<article>	Yes	No	No
<aside>	Yes	No	No
<audio>	Yes	No	No
<b>	Yes	Yes	Yes
<base>	Yes	Yes	Yes
<basefont>	No	Yes	No
<bdi>	Yes	No	No
<bdo>	Yes	Yes	No
<big>	No	Yes	Yes
<blockquote>	Yes	Yes	Yes
<body>	Yes	Yes	Yes
<br>	Yes	Yes	Yes
<button>	Yes	Yes	Yes
<canvas>	Yes	No	No
<caption>	Yes	Yes	Yes
<center>	No	Yes	No
<cite>	Yes	Yes	Yes
<code>	Yes	Yes	Yes
<col>	Yes	Yes	No
<colgroup>	Yes	Yes	No
<data>	Yes	No	No
<datalist>	Yes	No	No
<dd>	Yes	Yes	Yes
<del>	Yes	Yes	No
<details>	Yes	No	No
<dfn>	Yes	Yes	Yes
<dialog>	Yes	No	No
<dir>	No	Yes	No
<div>	Yes	Yes	Yes
<dl>	Yes	Yes	Yes
<dt>	Yes	Yes	Yes
<em>	Yes	Yes	Yes
<embed>	Yes	No	No
<fieldset>	Yes	Yes	Yes
<figcaption>	Yes	No	No
<figure>	Yes	No	No
<font>	No	Yes	No
<footer>	Yes	No	No
<form>	Yes	Yes	Yes
<frame>	No	No	No
<frameset>	No	Yes	No
<h1> to <h6>	Yes	Yes	Yes
<head>	Yes	Yes	Yes
<header>	Yes	No	No
<hr>	Yes	Yes	Yes
<html>	Yes	Yes	Yes
<i>	Yes	Yes	Yes
<iframe>	Yes	Yes	No
<img>	Yes	Yes	Yes
<input>	Yes	Yes	Yes
<ins>	Yes	Yes	No
<kbd>	Yes	Yes	Yes
<label>	Yes	Yes	Yes
<legend>	Yes	Yes	Yes
<li>	Yes	Yes	Yes
<link>	Yes	Yes	Yes
<main>	Yes	No	No
<map>	Yes	Yes	No
<mark>	Yes	No	No
<meta>	Yes	Yes	Yes
<meter>	Yes	No	No
<nav>	Yes	No	No
<noframes>	No	Yes	No
<noscript>	Yes	Yes	Yes
<object>	Yes	Yes	Yes
<ol>	Yes	Yes	Yes
<optgroup>	Yes	Yes	Yes
<option>	Yes	Yes	Yes
<output>	Yes	No	No
<p>	Yes	Yes	Yes
<param>	Yes	Yes	Yes
<picture>	Yes	No	No
<pre>	Yes	Yes	Yes
<progress>	Yes	No	No
<q>	Yes	Yes	Yes
<rp>	Yes	No	No
<rt>	Yes	No	No
<ruby>	Yes	No	No
<s>	Yes	Yes	No
<samp>	Yes	Yes	Yes
<script>	Yes	Yes	Yes
<section>	Yes	No	No
<select>	Yes	Yes	Yes
<small>	Yes	Yes	Yes
<source>	Yes	No	No
<span>	Yes	Yes	Yes
<strike>	No	Yes	No
<strong>	Yes	Yes	Yes
<style>	Yes	Yes	Yes
<sub>	Yes	Yes	Yes
<summary>	Yes	No	No
<sup>	Yes	Yes	Yes
<table>	Yes	Yes	Yes
<tbody>	Yes	Yes	No
<td>	Yes	Yes	Yes
<template>	Yes	No	No
<textarea>	Yes	Yes	Yes
<tfoot>	Yes	Yes	No
<th>	Yes	Yes	Yes
<thead>	Yes	Yes	No
<time>	Yes	No	No
<title>	Yes	Yes	Yes
<tr>	Yes	Yes	Yes
<track>	Yes	No	No
<tt>	No	Yes	Yes
<u>	Yes	Yes	No
<ul>	Yes	Yes	Yes
<var>	Yes	Yes	Yes
<video>	Yes	No	No
<wbr>	Yes	No	No